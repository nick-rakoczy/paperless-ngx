apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-broker"
  labels:
    app.kubernetes.io/name: "{{ .Release.Name }}-broker"
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ .Release.Name }}-broker"
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{ .Release.Name }}-broker"
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: redis
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          volumeMounts:
            - name: redisdata
              mountPath: /data
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}
      volumes:
        - name: redisdata
          {{- if .Values.redis.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-redisdata
          {{- else }}
          emptyDir: {}
          {{- end }}
