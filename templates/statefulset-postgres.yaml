apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-db
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-db
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  serviceName: {{ .Release.Name }}-db
  replicas: 1
  {{- if .Values.postgres.podManagementPolicy }}
  podManagementPolicy: {{ .Values.postgres.podManagementPolicy }}
  {{- end }}
  {{- if .Values.postgres.updateStrategy }}
  updateStrategy:
    {{- toYaml .Values.postgres.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}-db
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-db
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.postgres.securityContext }}
      securityContext:
        {{- toYaml .Values.postgres.securityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgres.env.POSTGRES_USER | quote }}
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgres.env.POSTGRES_USER | quote }}
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          env:
            {{- range $key, $value := .Values.postgres.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
              subPath: postgres
          resources:
            {{- toYaml .Values.postgres.resources | nindent 12 }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: {{ .Release.Name }}-pgdata
          app.kubernetes.io/instance: {{ .Release.Name }}
      spec:
        accessModes:
          - ReadWriteOnce
        {{- if .Values.postgres.persistence.storageClass }}
        storageClassName: {{ .Values.postgres.persistence.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.postgres.persistence.size }}